# Basic workflow
name: build

# Allow write permissions
permissions:
  contents: write

# Use more columns for terminal output
env:
  COLUMNS: 120
  PYTHONIOENCODING: utf8

# Controls when the action will run
# Workflow begins with push or PR events
# Focuses on the master branch only
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Create one single job
# This job performs all necessary checks
jobs:
  build:
    # do not allow a build to run for more than 5 minutes
    timeout-minutes: 5
    # Use the latest version of Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Performs all actions on different versions of Python
        python-version: ["3.11"]
    # Define the workflow steps
    steps:
    # Checkout the code of the repository
        - name: Check out Repository Code
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        # Setup Python for the current language version
        - name: Setup Python ${{ matrix.python-version }}
          if: always()
          uses: actions/setup-python@v1
          with:
            python-version: ${{ matrix.python-version }}
        # Install pip
        - name: Install Pip
          if: always()
          run: |
            pip install -U pip
        # Run GatorGrader: see config/gatorgrade.yml
        - name: Run GatorGrader with GatorGrade
          if: always()
          run:  |
            pip install gatorgrade
            gatorgrade --config config/gatorgrade.yml --report env md GITHUB_STEP_SUMMARY
        # Get the current time
        - name: Get the Current Time
          uses: josStorer/get-current-time@v2
          if: always()
          id: current-time
          with:
            format: YYYYMMDD-HH-mm-ss
            utcOffset: "-05:00"
        # Write the collected GatorGrade data to the designated branch
        - name: Write Collected Data to Designated Branch
          uses: GatorEducator/BranchWrite@v1.0.1
          if: always()
          with:
            repo-token: ${{ secrets.GITHUB_TOKEN }}
            branch: insight
            path: insight/insight-report-${{steps.current-time.outputs.formattedTime}}.json
            source: env
            source-arg: JSON_REPORT